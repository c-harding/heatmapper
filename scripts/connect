#!/usr/bin/env bash

set -e

cd "$(dirname "$0")/.."

case $1 in
  -e|--env)
    ENV="$2"
    shift 2 # past argument and value
    ;;
  -e*)
    ENV="${$1#-e}"
    shift
    ;;
  --env=*)
    ENV="${$1#*=}"
    shift
    ;;
esac

if [ "$ENV" = "-" ]; then
  ENV="$(git branch --show-current)"
  if [ "$ENV" = "-" ]; then
    printf 'Git currently has a detached HEAD, cannot deploy the branch.\n' "$ENV" "$ENV" >&2
    echo >&2
    exit 1
  end
end

if [ -f dist/"$ENV".env ]; then
  set -a
  . "$(printf "dist/%q.env" "$ENV")"
  set +a
elif [ ! -z "$ENV" ]; then
  printf 'The environment %q is not supported, the file dist/%q.env does not exist.\n' "$ENV" "$ENV" >&2
  echo >&2
  exit 1
fi

if [ -z "$DEPLOY_HOST" ]; then
  echo 'DEPLOY_HOST is not set.' >&2
  echo 'Please add this to dist/.env or provide it on the command line.' >&2
  echo >&2
  echo 'To deploy to a specific environment, please use -e / --env,' >&2
  echo 'e.g. "--env prod" to use dist/prod.env,' >&2
  echo 'or "--env -" to use the current branch name.' >&2
  echo >&2
  exit 1
fi

if [ -z "$DEPLOY_USER" ]; then
  DEPLOY_TARGET="$DEPLOY_HOST"
else
  DEPLOY_TARGET="$DEPLOY_USER@$DEPLOY_HOST"
fi

if [ -z "$DEPLOY_KEYPAIR" ]; then
  DEPLOY_FLAG=""
else
  DEPLOY_FLAG="$(printf -- "-i%q" "$DEPLOY_KEYPAIR")"
fi

if [ "$0" = "$BASH_SOURCE" ]; then
  ssh $DEPLOY_FLAG "$DEPLOY_TARGET" "$@"
fi
